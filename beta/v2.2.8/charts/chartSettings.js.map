{"version":3,"sources":["../../../../src/charts/chartSettings.es6"],"names":["COMMON_LINE_STYLE","VERTICAL_LINE_STYLE","HORIZONTAL_LINE_STYLE","SPOT_STYLE","CHART_LABELS","start_time","i18n","barrier","end_time","entry_spot","exit_spot","getLabelEl","labels","label_el","label","getMarkerSettings","fillColor","lineColor","lineWidth","radius","states","hover"],"mappings":";;;;;;AAAA;AACA,QAAMA,oBAAoB,sDAA1B;AACA,QAAMC,sBAAyBD,iBAAzB,6FAAN;AACA,QAAME,wBAA2BF,iBAA3B,0FAAN;AACA,QAAMG,aAAa,oEAAnB;;AAEA,QAAMC,eAAe;AACjBC,sCAA4BJ,mBAA5B,uCAAiF,aAAaK,IAAb,EADhE;AAEjBC,mCAAyBL,qBAAzB,uCAAgF,UAAUI,IAAV,EAF/D;AAGjBE,oCAA0BP,mBAA1B,wCAAgF,WAAWK,IAAX,EAH/D;AAIjBG,sCAA4BN,UAA5B,oEAAqG,aAAaG,IAAb,EAArG,WAJiB;AAKjBI,qCAA2BP,UAA3B,qEAAqG,YAAYG,IAAZ,EAArG;AALiB,KAArB;;AAQA,QAAMK,aAAa,SAAbA,UAAa,CAACC,MAAD,EAAY;AAC3B,YAAIC,WAAW,EAAf;AAD2B;AAAA;AAAA;;AAAA;AAE3B,iCAAoBD,MAApB,8HAA4B;AAAA,oBAAjBE,KAAiB;;AACxB,oBAAIA,SAASV,aAAaU,KAAb,CAAb,EAAkC;AAC9BD,gCAAYT,aAAaU,KAAb,CAAZ;AACH;AACJ;AAN0B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;AAO3B,yBAAeD,QAAf;AACH,KARD;;AAUA,QAAME,oBAAoB,SAApBA,iBAAoB,GAAyB;AAAA,YAAxBC,SAAwB,uEAAZ,OAAY;;AAC/C,eAAO,EAAEA,oBAAF,EAAaC,WAAW,QAAxB,EAAkCC,WAAW,CAA7C,EAAgDC,QAAQ,CAAxD,EAA2DC,QAAQ,EAAEC,OAAO,EAAEL,oBAAF,EAAaC,WAAW,QAAxB,EAAkCC,WAAW,CAA7C,EAAgDC,QAAQ,CAAxD,EAAT,EAAnE,EAAP;AACH,KAFD;;YAISR,U,GAAAA,U;YAAYI,iB,GAAAA,iB","file":"chartSettings.js","sourcesContent":["// TODO: move chartoptions here -- getChartOptions: () => chart_options,\nconst COMMON_LINE_STYLE = 'margin-left: 10px; border: 0; display: inline-block;'\nconst VERTICAL_LINE_STYLE = `${COMMON_LINE_STYLE} margin-bottom: -3px; height: 15px; width: 5px; border-left: 2px; border-color: #e98024;`;\nconst HORIZONTAL_LINE_STYLE = `${COMMON_LINE_STYLE} margin-bottom: 3px; height: 2; width: 20px; border-bottom: 2px; border-color: green;`;\nconst SPOT_STYLE = 'margin: 3px 5px 0 10px; display: inline-block; border-radius: 6px;';\n\nconst CHART_LABELS = {\n    start_time: `<span style=\"${VERTICAL_LINE_STYLE} border-style: solid;\"></span> ${'Start Time'.i18n()}`,\n    barrier: `<span style=\"${HORIZONTAL_LINE_STYLE} border-style: solid;\"></span> ${'Barrier'.i18n()}`,\n    end_time: `<span style=\"${VERTICAL_LINE_STYLE} border-style: dashed;\"></span> ${'End Time'.i18n()}`,\n    entry_spot: `<span style=\"${SPOT_STYLE} border: 3px solid orange; width: 4px; height: 4px;\"></span>${'Entry Spot'.i18n()}&nbsp;`,\n    exit_spot: `<span style=\"${SPOT_STYLE} background-color: orange; width:10px; height: 10px;\"></span>${'Exit Spot'.i18n()}&nbsp;`,\n};\n\nconst getLabelEl = (labels) => {\n    let label_el = '';\n    for (const label of labels) {\n        if (label && CHART_LABELS[label]) {\n            label_el += CHART_LABELS[label];\n        }\n    }\n    return `<div>${label_el}</div>`;\n};\n\nconst getMarkerSettings = (fillColor = 'white') => {\n    return { fillColor, lineColor: 'orange', lineWidth: 3, radius: 4, states: { hover: { fillColor, lineColor: 'orange', lineWidth: 3, radius: 4 }}};\n};\n\nexport { getLabelEl, getMarkerSettings };"]}