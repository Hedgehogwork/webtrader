{"version":3,"sources":["../../../../src/trade/tradeConf.es6"],"names":["binders","priority","bind","el","model","chart","Highcharts","Chart","title","credits","enabled","type","renderTo","backgroundColor","width","getAttribute","height","marginLeft","tooltip","formatter","tick","array","x","xAxis","min","max","labels","yAxis","align","gridLineWidth","series","data","marker","plotOptions","scatter","enableMouseTracking","exporting","enableImages","legend","routine","ticks","addPlotLineX","options","label_left_or_right","label","addPlotLine","value","id","text","color","addPlotLineY","addPoint","index","length","last","quote","plot_x","getPlotX","plot_y","getPlotY","removePlotLine","last_1000_ticks","events","on","epoch","push","shift","register_ticks","state","extra","tick_count","symbol","purchase_epoch","buy","purchase_time","contract","add_tick","is_new_tick","some","t","should_add_tick_to_chart","on_add_new_tick","contract_has_finished","status","on_contract_finished","decimal_digits","digits_after_decimal","pip","number","utc","format","symbol_name","toFixed","update","back","visible","entry","expiry","tracking_timeout_set","track_ticks","filter","forEach","setTimeout","is_different_open_contract_stream","proposal_open_contract","contract_id","error","on_open_proposal_error","on_open_proposal_success","growl","message","forget","echo_req","subscribe","entry_tick_time","exit_tick_time","date_expiry","should_track_ticks","init","show_callback","hide_callback","root","i18n","getbarrier","barrier","includes","category_display","name","longcode","balance_after","buy_price","currencyFractionalDigits","start_time","transaction_id","payout","currency","potential_profit","potential_profit_text","show_result","spreads","amount_per_point","stop_loss_level","stop_profit_level","average","sum","i","avg","inx","categories_with_barrier","should_add_barrier","category","contract_category","digits_value","chart_visible","show_tick_chart","arrow","isLookback","contract_type","formula","amount","undefined","waiting","won","lost","sell_expired","onclick","e","$target","target","hasClass","addClass","require","viewTransaction","then","removeClass","view"],"mappings":"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","file":"tradeConf.js","sourcesContent":["﻿import _ from 'lodash';\nimport $ from 'jquery';\nimport moment from 'moment';\nimport liveapi from '../websockets/binary_websockets';\nimport rv from '../common/rivetsExtra';\nimport chartingRequestMap from '../charts/chartingRequestMap';\nimport html from 'text!../trade/tradeConf.html';\nimport 'css!../trade/tradeConf.css';\nimport Lookback from './lookback';\n\n/* rv binder to show tick chart for this confirmation dialog */\nrv.binders['tick-chart'] = {\n   priority: 65, /* a low priority to apply last */\n   bind: function(el) {\n      const model = this.model;\n      el.chart = new Highcharts.Chart({\n         title: '',\n         credits: {enabled: false},\n         chart: {\n            type: 'line',\n            renderTo: el,\n            backgroundColor: null, /* make background transparent */\n            width: (el.getAttribute('width') || 400)*1,\n            height: (el.getAttribute('height') || 120)*1,\n            marginLeft: 20,\n         },\n         tooltip: {\n            formatter: function () {\n               const tick = model.array[this.x-1];\n               return (tick && tick.tooltip) || false;\n            }\n         },\n         xAxis: {\n            type: 'linear',\n            min: 1,\n            max: el.getAttribute('tick-count')*1 + 1 /* exist spot vertical plot will not be at the end */,\n            labels: { enabled: false, }\n         },\n         yAxis: {\n            labels: { align: 'left', x: 0, },\n            title: '',\n            gridLineWidth: 0,\n         },\n         series: [\n            { data: [] },\n            /* HighChart scales the y-axis automatically based on the maximum value of data.\n             * but it doesn't consider the plotLine's value in its calculations.\n             * We add an invisible seri and late plotline values to work around this issue. */\n            {\n               type: 'scatter',\n               marker: { enabled: false },\n               data: []\n            }\n         ],\n         plotOptions: { scatter: { enableMouseTracking: false } },\n         exporting: {enabled: false, enableImages: false},\n         legend: {enabled: false},\n      });\n   },\n   routine: function(el, ticks){\n      const model = this.model;\n      const addPlotLineX = (chart, options) => {\n         const label_left_or_right = options.label === 'Entry Spot' ? -15 : 5;\n\n         chart.xAxis[0].addPlotLine({\n            value: options.value,\n            id: options.id || options.value,\n            label: {text: options.label || 'label', x:  label_left_or_right },\n            color: options.color || '#e98024',\n            width: options.width || 2,\n         });\n      };\n\n      const addPlotLineY = (chart,options) => {\n         chart.yAxis[0].addPlotLine({\n            id: options.id || options.label,\n            value: options.value,\n            label: {text: options.label, align: 'center'},\n            color: 'green',\n            width: 2,\n         });\n\n         /* Add plotline value to invisible seri to make the plotline always visible. */\n         chart.series[1].addPoint([1, options.value*1]);\n      };\n\n      const index = ticks.length;\n      if(index == 0) return;\n\n      const tick = _.last(ticks);\n      el.chart.series[0].addPoint([index, tick.quote*1]);\n\n      const plot_x = model.getPlotX(); // could return null\n      plot_x && addPlotLineX(el.chart,plot_x);\n      const plot_y = model.getPlotY(); // could return null\n      plot_y && el.chart.yAxis[0].removePlotLine(plot_y.id);\n      plot_y && addPlotLineY(el.chart, plot_y);\n\n   } /* end of routine() */\n};\n\nconst last_1000_ticks = []; /* record the last 1k ticks returned */\nliveapi.events.on('tick', (data) => {\n   const tick = data.tick;\n   tick.quote *= 1;\n   tick.epoch *= 1;\n   last_1000_ticks.push(tick);\n   if(last_1000_ticks.length > 1000)\n      last_1000_ticks.shift();\n});\n\nconst register_ticks = (state, extra) => {\n   let tick_count = extra.tick_count * 1,\n      symbol = extra.symbol,\n      purchase_epoch = state.buy.purchase_time * 1,\n      contract;\n\n   /* No need to worry about WS connection getting closed, because the user will be logged out */\n   const add_tick = (tick) => {\n      const is_new_tick = !state.ticks.array.some((t) => t.epoch * 1 === tick.epoch * 1);\n      const should_add_tick_to_chart = tick_count > 0 && is_new_tick;\n      if (should_add_tick_to_chart) {\n            on_add_new_tick(tick);\n            --tick_count;\n      }\n\n      const contract_has_finished = contract.status !== 'open';\n      if (contract_has_finished) {\n            on_contract_finished(contract.status);\n      }\n   }\n\n   const on_add_new_tick = (tick) => {\n      const decimal_digits = chartingRequestMap.digits_after_decimal(extra.pip, symbol);\n      state.ticks.array.push({\n         quote: tick.quote,\n         epoch: tick.epoch,\n         number: state.ticks.array.length + 1,\n         tooltip: moment.utc(tick.epoch*1000).format(\"dddd, MMM D, HH:mm:ss\") + \"<br/>\" +\n         extra.symbol_name + \" \" + tick.quote.toFixed(decimal_digits),\n         decimal_digits,\n      });\n   };\n\n   const on_contract_finished = (status) => {\n      state.ticks.status = status;\n      state.buy.update();\n      state.back.visible = true;\n   };\n\n   let entry = null, expiry = null;\n   let tracking_timeout_set = false;\n   const track_ticks = () => {\n      tracking_timeout_set = false;\n      last_1000_ticks.filter(\n         (tick) => (tick.symbol === extra.symbol && tick.epoch*1 >= entry && tick.epoch*1 <= expiry)\n      ).forEach(add_tick);\n      if(tick_count > 0) {\n         tracking_timeout_set = true;\n         setTimeout(track_ticks, 300);\n      }\n   }\n\n   liveapi.events.on('proposal_open_contract', (data) => {\n      const is_different_open_contract_stream = data.proposal_open_contract.contract_id !== extra.contract_id;\n      if (is_different_open_contract_stream) {\n            return;\n      };\n\n      if (data.error) {\n            on_open_proposal_error(data);\n            return;\n      }\n      on_open_proposal_success(data);\n   });\n\n   const on_open_proposal_error = (data) => {\n      $.growl.error({message: data.error.message});\n      liveapi.proposal_open_contract.forget(data.echo_req.contract_id);\n      liveapi.proposal_open_contract.subscribe(data.echo_req.contract_id);\n   };\n\n   const on_open_proposal_success = (data) => {\n      contract = data.proposal_open_contract;\n      entry = contract.entry_tick_time ? contract.entry_tick_time * 1 : entry;\n      expiry = contract.exit_tick_time ? contract.exit_tick_time * 1 : contract.date_expiry ? contract.date_expiry * 1: expiry;\n      const should_track_ticks = !tracking_timeout_set && entry && expiry;\n      if (should_track_ticks) {\n            track_ticks();\n      }\n   };\n}\n\n/** @param data\n*  @param extra = {\n*    currency: ,\n*    symbol: \"frxXAUUSD\",\n*    symbol_name: \"Gold/USD\",\n*    category: {},\n*    category_display: ,\n*    duration_unit: ,\n*      pip: \"0.001\",\n*   }\n* @param show_callback\n* @param hide_callback\n**/\nexport const init = (data, extra, show_callback, hide_callback) => {\n   const root = $(html).i18n();\n   const buy = data.buy;\n   const decimal_digits = chartingRequestMap.digits_after_decimal(extra.pip, extra.symbol);\n   extra.getbarrier = (tick) => {\n      let barrier = tick.quote*1;\n      if(extra.barrier && !_(['rise','fall']).includes(extra.category_display.name)) {\n         barrier += extra.barrier*1;\n      }\n      return barrier.toFixed(decimal_digits);\n   }\n   const state = {\n      title: {\n         text: 'Contract Confirmation'.i18n(),\n      },\n      buy: {\n         barrier: null,\n         message: buy.longcode,\n         balance_after: buy.balance_after,\n         buy_price: (+buy.buy_price).toFixed(currencyFractionalDigits()),\n         purchase_time: buy.purchase_time,\n         start_time: buy.start_time,\n         transaction_id: buy.transaction_id,\n         payout: (+buy.payout).toFixed(currencyFractionalDigits()),\n         currency: extra.currency,\n         potential_profit : (buy.payout - buy.buy_price).toFixed(currencyFractionalDigits()),\n         potential_profit_text : 'Profit'.i18n(),\n         show_result: false,\n      },\n      spreads: {\n         amount_per_point: buy.amount_per_point || '0',\n         stop_loss_level: buy.stop_loss_level || '0',\n         stop_profit_level: buy.stop_profit_level || '0',\n      },\n      ticks: {\n         array: [],\n         average: () => {\n            const ticks = state.ticks;\n            const array = ticks.array;\n            let sum = 0;\n            for(let i = 0; i < array.length; ++i)\n               sum += array[i].quote*1;\n            const avg = sum / (array.length || 1);\n            return avg;\n         },\n         getPlotX: () => {\n            const ticks = state.ticks;\n            const inx = ticks.array.length;\n            if(inx === 1) return {value: inx, label: 'Entry Spot'.i18n()};\n            if(inx === ticks.tick_count) return {value:inx, label: 'Exit Spot'.i18n()}\n            return null;\n         },\n         getPlotY: () => {\n            const ticks = state.ticks;\n            const inx = ticks.array.length;\n            const tick = ticks.array[inx-1];\n            const categories_with_barrier = ['callput', 'callputequal'];\n            const should_add_barrier = (inx === 1 && _(categories_with_barrier).includes(ticks.category.contract_category));\n\n            if (should_add_barrier) {\n               const barrier = extra.getbarrier(tick);\n               state.buy.barrier = barrier; /* update barrier value to show in confirm dialog */\n               return {value: barrier*1, label:'Barrier ('.i18n() +barrier+')', id: 'plot-barrier-y'};\n            }\n\n            if(ticks.category.contract_category === 'asian') {\n               const avg = ticks.average().toFixed(decimal_digits + 1);\n               return {value: avg, label:'Average ('.i18n() + avg + ')', id: 'plot-barrier-y'};\n            }\n            return null;\n         },\n         tick_count: extra.tick_count,\n         value: (extra.digits_value || '0') + '', // last digit value selected by the user\n         category: extra.category,\n         category_display: extra.category_display,\n\n         status: 'waiting', /* could be 'waiting', 'lost' or 'won' */\n         chart_visible: extra.show_tick_chart,\n      },\n      arrow: {\n         visible: !extra.show_tick_chart && extra.category.contract_category !== 'digits',\n      },\n      back: { visible: false }, /* back buttom */\n   };\n\n   if (Lookback.isLookback(extra.category_display.contract_type)) {\n     state.buy.payout = Lookback.formula(extra.category_display.contract_type, extra.amount);\n     state.buy.potential_profit = undefined;\n   }\n\n   state.buy.update = () => {\n      const status = state.ticks.status;\n      state.title.text = { waiting: 'Contract Confirmation'.i18n(),\n         won : 'This contract won'.i18n(),\n         lost: 'This contract lost'.i18n()\n      }[status];\n      if(status === 'lost') {\n         state.buy.potential_profit = (-state.buy.buy_price).toFixed(currencyFractionalDigits());\n         state.buy.payout = (0).toFixed(currencyFractionalDigits());\n         state.buy.potential_profit_text = 'Lost';\n      }\n      if(status === 'won') {\n         state.buy.balance_after = buy.balance_after*1 + state.buy.payout*1;\n         liveapi.sell_expired(); // to update balance immediately\n      }\n      state.buy.show_result = true;\n   }\n\n   state.back.onclick = () => hide_callback(root);\n   state.arrow.onclick = (e) => {\n      const $target = $(e.target);\n      if(!$target.hasClass('disabled')) {\n         $target.addClass('disabled');\n         require(['viewtransaction/viewTransaction'], (viewTransaction) => {\n            viewTransaction.init(extra.contract_id, extra.transaction_id)\n               .then(() => $target.removeClass('disabled'));\n         });\n      }\n   };\n\n   const view = rv.bind(root[0], state)\n\n   if(!state.arrow.visible) { register_ticks(state, extra); }\n   else { state.back.visible = true; }\n\n   show_callback(root);\n}\n\nexport default  { init }\n"]}