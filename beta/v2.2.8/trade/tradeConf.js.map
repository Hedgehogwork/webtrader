{"version":3,"sources":["../../../../src/trade/tradeConf.es6"],"names":["display_decimals","binders","priority","bind","el","model","chart","Highcharts","Chart","title","credits","enabled","type","renderTo","backgroundColor","width","getAttribute","height","marginLeft","tooltip","formatter","tick","array","x","xAxis","min","max","labels","yAxis","align","addComma","value","toFixed","gridLineWidth","series","data","marker","plotOptions","scatter","enableMouseTracking","exporting","enableImages","legend","routine","ticks","tick_idx","length","barrier","make_barrier","contract_is_finished","draw_barrier","draw_exit_spot","draw_tick","draw_entry_spot","exit_tick_idx","findIndex","epoch","exit_tick_time","exit_spot","make_exit_spot","draw_x_line","addPoint","quote","is_label_left","entry_spot","make_entry_spot","removePlotLine","id","draw_y_line","options","align_label_left","label_x_position","addPlotLine","label","text","color","dashStyle","register_ticks","state","extra","proposal_open_contract","on_proposal_open_contract","on_tick","tick_count","add_tick","is_or_after_contract_entry","entry_tick_time","is_new_tick","some","state_tick","should_add_new_tick","status","buy","on_contract_finished","update_chart","add_tick_to_state","decimal_digits","digits_after_decimal","pip","symbol","make_tooltip","push","number","tick_time","utc","format","symbol_name","tick_quote_formatted","tick_arr_copy","slice","forget_stream_and_cb","update","back","visible","contract_id","events","off","forget","on","is_different_open_contract_stream","error","on_open_proposal_error","temp_ticks","first_tick_epoch","is_getting_history","is_different_stream","has_missing_ticks","get_tick_history","forEach","stored_tick","start","ticks_history","send","end","style","count","then","history","prices","price","idx","times","sort","a","b","catch","err","growl","message","echo_req","subscribe","init","show_callback","hide_callback","root","i18n","longcode","balance_after","buy_price","currencyFractionalDigits","purchase_time","start_time","transaction_id","payout","currency","potential_profit","potential_profit_text","show_result","spreads","amount_per_point","stop_loss_level","stop_profit_level","is_path_dependent","inx","digits_value","category","category_display","chart_visible","show_tick_chart","arrow","contract_category","isLookback","contract_type","formula","amount","undefined","waiting","won","lost","sell_expired","onclick","e","$target","target","hasClass","addClass","require","viewTransaction","removeClass","view"],"mappings":"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","file":"tradeConf.js","sourcesContent":["﻿import $ from 'jquery';\nimport moment from 'moment';\nimport liveapi from '../websockets/binary_websockets';\nimport rv from '../common/rivetsExtra';\nimport chartingRequestMap from '../charts/chartingRequestMap';\nimport html from 'text!../trade/tradeConf.html';\nimport 'css!../trade/tradeConf.css';\nimport Lookback from './lookback';\nimport '../common/util';\n\n/* rv binder to show tick chart for this confirmation dialog */\nlet display_decimals;\nrv.binders['tick-chart'] = {\n   priority: 65, /* a low priority to apply last */\n   bind: function(el) {\n      const model = this.model;\n      el.chart = new Highcharts.Chart({\n         title: '',\n         credits: {enabled: false},\n         chart: {\n            type: 'line',\n            renderTo: el,\n            backgroundColor: null, /* make background transparent */\n            width: (el.getAttribute('width') || 400)*1,\n            height: (el.getAttribute('height') || 120)*1,\n            marginLeft: 20,\n         },\n         tooltip: {\n            formatter: function () {\n               const tick = model.array[this.x-1];\n               return (tick && tick.tooltip) || false;\n            }\n         },\n         xAxis: {\n            type: 'linear',\n            min: 1,\n            max: el.getAttribute('tick-count')*1 + 1 /* exist spot vertical plot will not be at the end */,\n            labels: { enabled: false, }\n         },\n         yAxis: {\n            labels: {\n                  align: 'left',\n                  x: 0,\n                  formatter() {\n                        return addComma(this.value.toFixed(display_decimals));\n                  },\n            },\n            title: '',\n            gridLineWidth: 0,\n         },\n         series: [\n            { data: [] },\n            /* HighChart scales the y-axis automatically based on the maximum value of data.\n             * but it doesn't consider the plotLine's value in its calculations.\n             * We add an invisible seri and late plotline values to work around this issue. */\n            {\n               type: 'scatter',\n               marker: { enabled: false },\n               data: []\n            }\n         ],\n         plotOptions: { scatter: { enableMouseTracking: false } },\n         exporting: {enabled: false, enableImages: false},\n         legend: {enabled: false},\n      });\n   },\n   routine: function(el, ticks){\n      // Handles updating chart: state.ticks.array updates => routine fires\n      const model = this.model;\n      const tick_idx = ticks.length;\n      const barrier = model.make_barrier();\n      const { contract_is_finished } = model;\n\n      if (barrier) {\n            draw_barrier(barrier);\n      }\n\n      if (contract_is_finished) {\n            draw_exit_spot(model, ticks);\n            return;\n      }\n\n      if (tick_idx === 0) return;\n\n      draw_tick(tick_idx);\n\n      if (tick_idx === 1) {\n            draw_entry_spot(tick_idx);\n      }\n\n      function draw_exit_spot(model, ticks) {\n            let exit_tick_idx = ticks.findIndex((tick) => tick.epoch === (+model.exit_tick_time));\n            const exit_spot = model.make_exit_spot(exit_tick_idx + 1);\n            draw_x_line(el.chart, exit_spot);\n      };\n\n      function draw_tick(tick_idx) {\n            const tick = ticks[tick_idx -1];\n            el.chart.series[0].addPoint([tick_idx, tick.quote]);\n      };\n\n      function draw_entry_spot(tick_idx) {\n            const is_label_left = true;\n            const entry_spot = model.make_entry_spot(tick_idx);\n            draw_x_line(el.chart, entry_spot, is_label_left);\n      };\n\n      function draw_barrier(barrier) {\n            el.chart.yAxis[0].removePlotLine(barrier.id);\n            draw_y_line(el.chart, barrier);\n      };\n\n      function draw_x_line(chart, options, align_label_left) {\n            const label_x_position = align_label_left ? -15 : 5;\n   \n            chart.xAxis[0].addPlotLine({\n               value: options.value,\n               id: options.id || options.value,\n               label: {text: options.label || 'label', x:  label_x_position },\n               color: options.color || '#e98024',\n               width: options.width || 2,\n               dashStyle: options.dashStyle || false,\n            });\n      };\n\n      function draw_y_line(chart,options) {\n            chart.yAxis[0].addPlotLine({\n               id: options.id || options.label,\n               value: options.value,\n               label: {text: options.label, align: 'center'},\n               color: 'green',\n               width: 2,\n            });\n            /* Add plotline value to invisible seri to make the plotline always visible. */\n            chart.series[1].addPoint([1, options.value*1]);\n      };\n   }\n};\n\nconst register_ticks = (state, extra) => {\n   let proposal_open_contract;\n   let on_proposal_open_contract;\n   let on_tick;\n   let { tick_count } = extra;\n   /* No need to worry about WS connection getting closed, because the user will be logged out */\n   const add_tick  = (tick) => {\n      const is_or_after_contract_entry = (+tick.epoch) >= (+proposal_open_contract.entry_tick_time);\n      const is_new_tick = !state.ticks.array.some((state_tick) => state_tick.epoch * 1 === tick.epoch * 1);\n      const should_add_new_tick = is_new_tick && !state.ticks.contract_is_finished && is_or_after_contract_entry;\n\n      if (should_add_new_tick) {\n            const contract_is_finished = proposal_open_contract.status !== 'open' && !state.ticks.contract_is_finished;\n            state.buy.barrier = proposal_open_contract.barrier ? (+proposal_open_contract.barrier) : null;\n\n            if (contract_is_finished) {\n                  on_contract_finished(proposal_open_contract);\n                  update_chart();\n            }\n            tick_count--;\n            if (tick_count > -1) {\n                  add_tick_to_state(tick);\n            }\n      }\n   }\n\n   function add_tick_to_state(tick) {\n      const decimal_digits = chartingRequestMap.digits_after_decimal(extra.pip, extra.symbol);\n      const tooltip = make_tooltip(tick);\n\n      state.ticks.array.push({\n         quote: (+tick.quote),\n         epoch: (+tick.epoch),\n         number: state.ticks.array.length + 1,\n         tooltip,\n         decimal_digits,\n      });\n\n      function make_tooltip(tick) {\n            const tick_time = moment.utc(tick.epoch * 1000).format('dddd, MMM D, HH:mm:ss');\n            const { symbol_name } = extra;\n            const tick_quote_formatted = addComma((+tick.quote).toFixed(decimal_digits));\n\n            return `${tick_time}<br/>${symbol_name} ${(tick_quote_formatted)}`;\n      };\n   };\n\n   function update_chart() {\n            const tick_arr_copy = state.ticks.array.slice();\n            state.ticks.array = [...tick_arr_copy];\n    };\n\n   const on_contract_finished = (proposal_open_contract) => {\n      forget_stream_and_cb();\n\n      state.ticks.contract_is_finished = true;\n      state.ticks.exit_tick_time = proposal_open_contract.exit_tick_time ? proposal_open_contract.exit_tick_time : null;\n      state.ticks.status = proposal_open_contract.status;\n\n      state.buy.update();\n      state.back.visible = true;\n\n      function forget_stream_and_cb() {\n            const { contract_id } = extra;\n            liveapi.events.off('proposal_open_contract', on_proposal_open_contract);\n            liveapi.events.off('tick', on_tick);\n            liveapi.proposal_open_contract.forget(contract_id);\n      };\n   };\n\n   on_proposal_open_contract = liveapi.events.on('proposal_open_contract', (data) => {\n            const is_different_open_contract_stream = data.proposal_open_contract.contract_id !== extra.contract_id;\n            if (is_different_open_contract_stream) return;\n\n            if (data.error) {\n                  on_open_proposal_error(data);\n                  return;\n            }\n\n            ({ proposal_open_contract } = data);\n   });\n   \n  let temp_ticks = [];\n  let first_tick_epoch;\n  let is_getting_history = false;\n  on_tick = liveapi.events.on('tick', (data) => {\n      const is_different_stream = extra.symbol !== data.tick.symbol;\n      if (is_different_stream) return;\n      if (!first_tick_epoch) first_tick_epoch = data.tick.epoch;\n\n      const entry_tick_time = proposal_open_contract && proposal_open_contract.entry_tick_time;\n      if (!entry_tick_time) {\n            temp_ticks.push(data.tick);\n            return;\n      }\n\n      const has_missing_ticks = (first_tick_epoch > entry_tick_time);\n      if (has_missing_ticks) {\n            is_getting_history = true;\n            first_tick_epoch = entry_tick_time;\n            get_tick_history(entry_tick_time, extra.symbol);\n      }\n\n      if (is_getting_history) {\n            temp_ticks.push(data.tick);\n            return;\n      };\n\n      if (temp_ticks.length > 0) {\n            temp_ticks.forEach((stored_tick) => add_tick(stored_tick));\n            temp_ticks = [];\n      }\n\n      add_tick(data.tick);\n    });\n\n    function get_tick_history(start, ticks_history) {\n      liveapi.send({ ticks_history, end: 'latest', start, style: 'ticks', count: 5000})\n            .then((data) => {\n                  is_getting_history = false;\n                  data.history.prices.forEach((price, idx) => {\n                        temp_ticks.push({\n                              epoch: data.history.times[idx],\n                              quote: price,\n                              symbol: extra.symbol,\n                        });\n                  });\n                  temp_ticks.sort((a, b) => (+a.epoch) - (+b.epoch));\n            }).catch((err) => $.growl.error({ message: data.error.message }));\n    };\n\n   const on_open_proposal_error = (data) => {\n      $.growl.error({message: data.error.message});\n      liveapi.proposal_open_contract.forget(data.echo_req.contract_id);\n      liveapi.proposal_open_contract.subscribe(data.echo_req.contract_id);\n   };\n};\n\nexport const init = (data, extra, show_callback, hide_callback) => {\n   display_decimals = data.display_decimals || 3;\n   const root = $(html).i18n();\n   const { buy } = data;\n   const decimal_digits = chartingRequestMap.digits_after_decimal(extra.pip, extra.symbol);\n   const state = {\n      title: {\n         text: 'Contract Confirmation'.i18n(),\n      },\n      buy: {\n         barrier: null,\n         message: buy.longcode,\n         balance_after: buy.balance_after,\n         buy_price: (+buy.buy_price).toFixed(currencyFractionalDigits()),\n         purchase_time: buy.purchase_time,\n         start_time: buy.start_time,\n         transaction_id: buy.transaction_id,\n         payout: (+buy.payout).toFixed(currencyFractionalDigits()),\n         currency: extra.currency,\n         potential_profit : (buy.payout - buy.buy_price).toFixed(currencyFractionalDigits()),\n         potential_profit_text : 'Profit'.i18n(),\n         show_result: false,\n      },\n      spreads: {\n         amount_per_point: buy.amount_per_point || '0',\n         stop_loss_level: buy.stop_loss_level || '0',\n         stop_profit_level: buy.stop_profit_level || '0',\n      },\n      ticks: {\n         array: [],\n         contract_is_finished: false,\n         exit_tick_time: null,\n         is_path_dependent: null,\n         make_exit_spot: (inx) => ({value: inx, label: 'Exit Spot'.i18n(), dashStyle: 'Dash'}),\n         make_entry_spot: (inx) => ({value: inx, label: 'Entry Spot'.i18n()}),\n         make_barrier: () => {\n            const { barrier } = state.buy;\n            if (barrier) {\n                  return { value: +barrier, label: `${'Barrier'.i18n()} ('${addComma(barrier.toFixed(display_decimals))})`, id: 'plot-barrier-y'};\n            }\n            return null;\n         },\n         tick_count: extra.tick_count,\n         value: (extra.digits_value || '0') + '', // last digit value selected by the user\n         category: extra.category,\n         category_display: extra.category_display,\n\n         status: 'waiting', /* could be 'waiting', 'lost' or 'won' */\n         chart_visible: extra.show_tick_chart,\n      },\n      arrow: {\n         visible: !extra.show_tick_chart && extra.category.contract_category !== 'digits',\n      },\n      back: { visible: false }, /* back buttom */\n   };\n\n   if (Lookback.isLookback(extra.category_display.contract_type)) {\n     state.buy.payout = Lookback.formula(extra.category_display.contract_type, extra.amount);\n     state.buy.potential_profit = undefined;\n   }\n\n   state.buy.update = () => {\n      const { status } = state.ticks;\n      state.title.text = { waiting: 'Contract Confirmation'.i18n(),\n         won : 'This contract won'.i18n(),\n         lost: 'This contract lost'.i18n()\n      }[status];\n      if(status === 'lost') {\n         state.buy.potential_profit = (-state.buy.buy_price).toFixed(currencyFractionalDigits());\n         state.buy.payout = (0).toFixed(currencyFractionalDigits());\n         state.buy.potential_profit_text = 'Lost';\n      }\n      if(status === 'won') {\n         state.buy.balance_after = buy.balance_after*1 + state.buy.payout*1;\n         liveapi.sell_expired(); // to update balance immediately\n      }\n      state.buy.show_result = true;\n   };\n\n   state.back.onclick = () => hide_callback(root);\n   state.arrow.onclick = (e) => {\n      const $target = $(e.target);\n      if(!$target.hasClass('disabled')) {\n         $target.addClass('disabled');\n         require(['viewtransaction/viewTransaction'], (viewTransaction) => {\n            viewTransaction.init(extra.contract_id, extra.transaction_id)\n               .then(() => $target.removeClass('disabled'));\n         });\n      }\n   };\n\n   const view = rv.bind(root[0], state);\n\n   if(!state.arrow.visible) { register_ticks(state, extra); }\n   else { state.back.visible = true; }\n\n   show_callback(root);\n}\n\nexport default  { init }\n"]}