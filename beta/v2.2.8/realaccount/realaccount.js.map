{"version":3,"sources":["../../../../src/realaccount/realaccount.es6"],"names":["real_win","real_win_view","real_win_li","error_handler","err","console","error","growl","message","object_has_empty_string_value","obj","Object","values","some","value","init","li","click","then","what_todo","init_real_win","catch","moveToTop","root","i18n","_title","createBlankWindow","title","resizable","collapsable","minimizable","maximizable","width","height","close","dialog","trigger","remove","open","destroy","unbind","init_state","offset","top","my","left","at","css","app_id","state","route","empty_fields","validate","clear","debounce","show","input_disabled","risk","visible","user","disabled","accepted","pep","salutation","salutation_array","account_opening_reason_array","account_opening_reason","first_name","last_name","date_of_birth","yearRange","showButtonPanel","residence","residence_name","address_line_1","address_line_2","city_address","state_address","state_address_array","text","address_postcode","phone","secret_question_inx","secret_question_array","secret_answer","place_of_birth","country_array","tax_residence","tax_identification_number","available_currencies","financial","professional_client","chk_professional","trading_experience","forex_trading_experience","forex_trading_frequency","binary_options_trading_experience","binary_options_trading_frequency","cfd_trading_experience","cfd_trading_frequency","other_instruments_trading_experience","other_instruments_trading_frequency","financial_information","income_source","employment_status","employment_industry","occupation","source_of_wealth","education_level","net_income","estimated_worth","account_turnover","trading_experience_select_data","financial_information_select_data","local_storage","get","reduce","a","b","test","id","is_valid","isValid","trim","new_account_real","update","request","undefined","address_city","address_state","secret_question","replace","send","data","info","oauth","push","client_id","token","oauth_token","is_virtual","set","notice","switch_account","hide","pep_window","e","preventDefault","modal","closeOnEscape","professional_window","first_paragraph","first_ul","second_paragraph","second_ul","create_request","new_account_maltainvest","join","affiliate_token","client_type","accept_risk","warn","accept","decline","document","getElementById","scrollIntoView","set_account_opening_reason","req","set_settings","show_account_opening_reason","create_new_account","curr","currency","set_account_currency","window","location","reload","bind","residence_promise","get_settings","unix","format","subtract","country_code","country","cached","residence_list","find","phone_idd","states_list","update_currencies","authorize","landing_company_details","landing_company_name","legal_allowed_currencies","currencies","currencies_config","cr_accts","filter","loginids","is_cr","has_fiat","type","c","difference","map","acc"],"mappings":"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","file":"realaccount.js","sourcesContent":["/*\n * Created by amin on June 14, 2016.\n */\n\nimport $ from 'jquery';\nimport liveapi from 'websockets/binary_websockets';\nimport windows from 'windows/windows';\nimport rv from 'common/rivetsExtra';\nimport _ from 'lodash';\nimport moment from 'moment';\nimport { getLandingCompany } from 'navigation/navigation';\nimport html from 'text!realaccount/realaccount.html';\nimport 'css!realaccount/realaccount.css';\nimport { financial_account_opening } from '../common/common';\n\nlet real_win = null;\nlet real_win_view = null; // rivets view\nlet real_win_li = null;\n\nconst error_handler = (err) => {\n   console.error(err);\n   $.growl.error({ message: err.message });\n};\n\nconst object_has_empty_string_value = (obj) => {\n      return Object.values(obj).some((value) => value === '');\n};\n\nexport const init = (li) => {\n   real_win_li = li;\n   li.click(() => {\n      if (!real_win) {\n         getLandingCompany()\n            .then(\n            (what_todo) => init_real_win(html, what_todo)\n            )\n            .catch(error_handler);\n      } else {\n         real_win.moveToTop();\n      }\n   });\n}\n\nconst init_real_win = (root, what_todo) => {\n   root = $(root).i18n();\n   const _title = {\n      'upgrade-mlt': 'Real Money Account Opening'.i18n(),\n      'upgrade-mf': 'Financial Account Opening form'.i18n(),\n      'new-account': 'New Account'.i18n(),\n   }[what_todo];\n\n   real_win = windows.createBlankWindow(root, {\n      title: _title,\n      resizable: false,\n      collapsable: false,\n      minimizable: true,\n      maximizable: false,\n      width: 380,\n      height: 400,\n      close: () => {\n         real_win.dialog('destroy');\n         real_win.trigger('dialogclose'); // TODO: figure out why event is not fired.\n         real_win.remove();\n         real_win = null;\n      },\n      open: () => { },\n      destroy: () => {\n         real_win_view && real_win_view.unbind();\n         real_win_view = null;\n      },\n      'data-authorized' :'true'\n   });\n\n   init_state(root, what_todo);\n   real_win.dialog('open');\n\n   /* update dialog position, this way when dialog is resized it will not move*/\n   const offset = real_win.dialog('widget').offset();\n   offset.top = 110;\n   real_win.dialog(\"option\", \"position\", { my: offset.left, at: offset.top });\n   real_win.dialog('widget').css({\n      left: offset.left + 'px',\n      top: offset.top + 'px'\n   });\n}\n\nconst init_state = (root, what_todo) => {\n   const app_id = liveapi.app_id;\n   const state = {\n      route: { value: 'user' }, // routes: ['user', 'financial']\n      empty_fields: {\n         validate: false,\n         clear: _.debounce(() => {\n            state.empty_fields.validate = false;\n         }, 4000),\n         show: () => {\n            state.empty_fields.validate = true;\n            state.empty_fields.clear();\n         }\n      },\n      what_todo: what_todo,\n      input_disabled: false,\n      risk: {\n         visible: false,\n      },\n      user: {\n         disabled: false,\n         accepted: what_todo === 'upgrade-mf',\n         pep: false,\n         salutation: 'Mr',\n         salutation_array: ['Mr', 'Mrs', 'Ms', 'Miss'],\n         account_opening_reason_array: ['Speculative', 'Income Earning', 'Hedging'],\n         account_opening_reason: '',\n         first_name: '',\n         last_name: '',\n         date_of_birth: '',\n         yearRange: \"-100:+0\",\n         showButtonPanel: false, // for jquery ui datepicker\n         residence: '-',\n         residence_name: '-',\n         address_line_1: '',\n         address_line_2: '',\n         city_address: '',\n         state_address: '-',\n         state_address_array: [{ text: '-', value: '-' }],\n         address_postcode: '',\n         phone: '',\n         secret_question_inx: 5,\n         secret_question_array: [\n            'Mother\\'s maiden name', 'Name of your pet', 'Name of first love',\n            'Memorable town/city', 'Memorable date', 'Favourite dish',\n            'Brand of first car', 'Favourite artist'\n         ],\n         secret_answer: '',\n         place_of_birth: '',\n         country_array: [{ text: '-', value: '-' }],\n         tax_residence: '',\n         tax_identification_number: '',\n         available_currencies: []\n      },\n      financial: {\n         accepted: false,\n         disabled: false,\n         professional_client: {\n            chk_professional: false,\n         },\n         trading_experience: {\n            forex_trading_experience: '',\n            forex_trading_frequency: '',\n            binary_options_trading_experience: '',\n            binary_options_trading_frequency: '',\n            cfd_trading_experience: '',\n            cfd_trading_frequency: '',\n            other_instruments_trading_experience: '',\n            other_instruments_trading_frequency: '',\n         },\n         financial_information: {\n            income_source: '',\n            employment_status: '',\n            employment_industry: '',\n            occupation: '',\n            source_of_wealth: '',\n            education_level: '',\n            net_income: '',\n            estimated_worth: '',\n            account_turnover: '',\n         },\n         trading_experience_select_data: {\n            ...financial_account_opening.trading_experience_select_data\n         },\n         financial_information_select_data: {\n            ...financial_account_opening.financial_information_select_data,\n         },\n      }\n   };\n\n   state.input_disabled = local_storage.get(\"oauth\").reduce((a, b) => {\n      return a || /MLT/.test(b.id)\n   }, false) && what_todo === \"upgrade-mf\";\n\n   state.user.is_valid = () => {\n      const user = state.user;\n      return state.user.account_opening_reason !== '' && user.first_name !== '' &&\n         !/[~`!@#\\$%\\^\\&\\*\\(\\)\\+=\\{\\}\\[\\]\\\\|:;\\\",<>?/\\d]/.test(user.first_name) &&\n         user.last_name !== '' &&\n         !/[~`!@#\\$%\\^\\&\\*\\(\\)\\+=\\{\\}\\[\\]\\\\|:;\\\",<>?/\\d]/.test(user.last_name) &&\n         moment(user.date_of_birth, 'YYYY-MM-DD', true).isValid() &&\n         $.trim(state.user.place_of_birth) !== ''\n         user.residence !== '-' &&\n         user.address_line_1 !== '' &&\n         !/[~`!#\\$%\\^\\&\\*\\(\\)\\+=\\{\\}\\[\\]\\\\|:;\\\"<>?]/.test(user.address_line_1) &&\n         !/[~`!#\\$%\\^\\&\\*\\(\\)\\+=\\{\\}\\[\\]\\\\|:;\\\"<>?]/.test(user.address_line_2) &&\n         user.city_address !== '' &&\n         !/[~`!@#\\$%\\^\\&\\*\\(\\)\\+=\\{\\}\\[\\]\\\\|:;\\\",<>?/\\d]/.test(user.city_address) &&\n         /^[^+]{0,20}$/.test(user.address_postcode) &&\n         user.phone !== '' && /^\\+?[0-9\\s]{6,35}$/.test(user.phone) &&\n         (state.input_disabled || /.{4,8}$/.test(user.secret_answer)) && // Check secret answer if mlt account\n         (state.what_todo != \"upgrade-mf\" || (\n            state.user.tax_residence && state.user.tax_identification_number && /^[\\w-]{0,20}$/.test(state.user.tax_identification_number)));\n   };\n\n   state.user.click = () => {\n      if (!state.user.is_valid()) {\n         state.empty_fields.show();\n         return;\n      }\n\n      if (state.what_todo === 'upgrade-mlt') {\n         state.user.new_account_real();\n         return;\n      }\n\n      state.route.update('financial');\n   }\n   state.user.new_account_real = () => {\n\n      const user = state.user;\n      const request = {\n         new_account_real: 1,\n         salutation: user.salutation,\n         first_name: user.first_name,\n         last_name: user.last_name,\n         account_opening_reason: user.account_opening_reason,\n         date_of_birth: user.date_of_birth,\n         place_of_birth: user.place_of_birth,\n         residence: user.residence,\n         address_line_1: user.address_line_1,\n         address_line_2: user.address_line_2 || undefined, // optional field\n         address_city: user.city_address,\n         address_state: user.state_address || undefined,\n         address_postcode: user.address_postcode || undefined,\n         phone: user.phone,\n         secret_question: user.secret_question_array[user.secret_question_inx],\n         secret_answer: user.secret_answer.replace('\"\"', \"'\")\n      };\n\n      state.user.disabled = true;\n      liveapi.send(request)\n         .then((data) => {\n            state.user.disabled = false;\n            const info = data.new_account_real;\n            const oauth = local_storage.get('oauth');\n            oauth.push({ id: info.client_id, token: info.oauth_token, is_virtual: 0 });\n            local_storage.set('oauth', oauth);\n            $.growl.notice({ message: 'Account successfully created' });\n            $.growl.notice({ message: 'Switching to your new account ...' });\n            /* login with the new account */\n            return liveapi.switch_account(info.client_id)\n               .then(() => {\n                  real_win && real_win.dialog('close');\n                  real_win_li.hide();\n               });\n         })\n         .catch((err) => {\n            state.user.disabled = false;\n            error_handler(err);\n         });\n   };\n\n   state.user.pep_window = (e) => {\n      e.preventDefault();\n      const text = `A Politically Exposed Person (PEP) is an individual who is or has been entrusted with a prominent public function including his/her immediate family members or persons known to be close associates of such persons, but does not include middle ranking or more junior officials.<br><br>\n         Such individuals include Heads of State, Ministers, Parliamentary Secretaries, Members of Parliament, Judges, Ambassadors, Senior Government Officials, High Ranking Officers in the Armed Forces, Audit Committees of the boards of central banks, and Directors of state-owned corporations.<br><br>\n         The “immediate family members” of the above examples will also be considered as PEP, and these include their spouses/partners, parents, and children. Additionally, “persons known to be close associates” of PEPs include their business partners, will also be considered as such.<br><br>\n         As a general rule, a person considered to be a PEP and who has ceased to be entrusted with a prominent public function for a period of at least twelve months no longer qualifies as a PEP.`;\n      windows.createBlankWindow(`<div style=\"padding:15px;\">${text}</div>`, {\n         title: \"PEP\",\n         modal: true,\n         resizable: false,\n         collapsable: false,\n         minimizable: false,\n         maximizable: false,\n         closeOnEscape: true,\n         width: 500,\n         height: 'auto'\n      }).dialog(\"open\");\n   }\n\n   state.user.professional_window = (e) => {\n      e.preventDefault();\n      const first_paragraph = `Clients need to satisfy at least two of the following criteria in order to receive Professional Client status:`;\n      const first_ul = [`You’ve carried out significant transactions on markets similar to the ones we offer, averaging 10 transactions per quarter for the previous four quarters`,\n      `The size of your instrument portfolio exceeds EUR 500,000 or its equivalent`, `You’ve worked in the financial sector for at least one year in a role that requires knowledge of your intended transactions on our platform`];\n      const second_paragraph = `If you choose to be treated as a Professional Client, we’ll regard you as having the required market knowledge and experience. As such, we’ll take steps to ensure that your request for Professional Client status meets the above criteria, including a request for the following:`;\n      const second_ul = [`Statements that reflect your transactions from the previous four quarters`, `Proof of your portfolio held elsewhere`, `Proof of your employment`];\n      windows.createBlankWindow(`<div style=\"padding:15px;\">\n      <div>${first_paragraph}</div>\n      <ul class=\"checked\">\n            <li>${first_ul[0]}</li>\n            <li>${first_ul[1]}</li>\n            <li>${first_ul[2]}</li>\n      </ul>\n      <div>${second_paragraph}</div>\n      <ul class=\"bullet\">\n            <li>${second_ul[0]}</li>\n            <li>${second_ul[1]}</li>\n            <li>${second_ul[2]}</li>\n      </ul>\n      </div>`, {\n         title: \"Professional Client\",\n         modal: true,\n         resizable: false,\n         collapsable: false,\n         minimizable: false,\n         maximizable: false,\n         closeOnEscape: true,\n         width: 600,\n         height: 'auto'\n      }).dialog(\"open\");\n   }\n\n   state.financial.click = () => {\n      if (object_has_empty_string_value(state.financial.trading_experience)) {\n            state.empty_fields.show();\n            $.growl.error({ message: 'Not all trading experiences are completed' });\n            return;\n      }\n\n      if (object_has_empty_string_value(state.financial.financial_information)) {\n         state.empty_fields.show();\n         $.growl.error({ message: 'Not all financial information are completed' });\n         return;\n      }\n\n      if (!state.financial.accepted) {\n         $.growl.error({ message: 'Binary.com terms and conditions unchecked.' });\n         return;\n      }\n\n      state.risk.visible = true;\n   };\n\n   state.financial.create_request = () => {\n      const user = state.user;\n      const request = {\n         new_account_maltainvest: 1,\n         salutation: user.salutation,\n         first_name: user.first_name,\n         account_opening_reason: user.account_opening_reason,\n         last_name: user.last_name,\n         date_of_birth: user.date_of_birth,\n         residence: user.residence,\n         address_line_1: user.address_line_1,\n         address_line_2: user.address_line_2 || undefined, // optional field\n         address_city: user.city_address,\n         address_state: user.state_address || undefined,\n         address_postcode: user.address_postcode || undefined,\n         phone: user.phone,\n         place_of_birth: state.user.place_of_birth,\n         tax_residence: state.user.tax_residence.join(\",\"),\n         tax_identification_number: state.user.tax_identification_number,\n\n         affiliate_token: '',\n         client_type: state.financial.professional_client.chk_professional ? 'professional' : 'retail',\n         ...state.financial.financial_information,\n         ...state.financial.trading_experience,\n         accept_risk: 1,\n      };\n      return request;\n   };\n\n   state.financial.new_account_maltainvest = () => {\n      const request = state.financial.create_request();\n      console.warn(request);\n   }\n\n   state.risk.accept = () => {\n      const request = state.financial.create_request();\n      if (!state.input_disabled) {\n         request.secret_question = state.user.secret_question_array[state.user.secret_question_inx];\n         request.secret_answer = state.user.secret_answer;\n      }\n      state.risk.visible = false;\n      state.financial.disabled = true;\n      liveapi.send(request)\n         .then((data) => {\n            const info = data.new_account_maltainvest;\n            const oauth = local_storage.get('oauth');\n            oauth.push({ id: info.client_id, token: info.oauth_token, is_virtual: 0 });\n            local_storage.set('oauth', oauth);\n            $.growl.notice({ message: 'Account successfully created' });\n            $.growl.notice({ message: 'Switching to your new account ...' });\n            /* login with the new account */\n            return liveapi.switch_account(info.client_id)\n               .then(() => {\n                  real_win && real_win.dialog('close');\n                  real_win_li.hide();\n               });\n         })\n         .catch((err) => {\n            state.financial.disabled = false;\n            error_handler(err);\n         });\n   }\n   state.risk.decline = () => {\n      state.risk.visible = false;\n   }\n\n   state.route.update = (route) => {\n      state.route.value = route;\n      // scroll to top for second page of form\n      if (route === 'financial') { document.getElementById('financial_second_page').scrollIntoView() }\n      real_win.dialog('widget').trigger('dialogresizestop');\n   };\n\n   state.set_account_opening_reason = () => {\n      var req = { set_settings: 1 };\n      req.account_opening_reason = state.user.account_opening_reason;\n      state.user.disabled = true;\n      liveapi.send(req).then((data) => {\n         state.user.show_account_opening_reason = false;\n      }).catch((err) => {\n         error_handler(err);\n         state.user.disabled = false;\n      });\n   };\n\n   state.create_new_account = (curr) => {\n      const req = {\n         new_account_real: 1,\n         salutation: state.user.salutation || '',\n         first_name: state.user.first_name || '',\n         last_name: state.user.last_name || '',\n         date_of_birth: state.user.date_of_birth || '',\n         address_line_1: state.user.address_line_1 || '',\n         address_line_2: state.user.address_line_2 || '',\n         address_city: state.user.city_address || '',\n         address_state: state.user.state_address || '',\n         address_postcode: state.user.address_postcode || '',\n         phone: state.user.phone || '',\n         account_opening_reason: state.user.account_opening_reason,\n         residence: state.user.residence,\n      };\n      liveapi.send(req).then((data) => {\n         const info = data.new_account_real;\n         const oauth = local_storage.get('oauth');\n         oauth.push({ id: info.client_id, token: info.oauth_token, currency: curr, is_virtual: 0 });\n         local_storage.set('oauth', oauth);\n         $.growl.notice({ message: 'Account successfully created' });\n         $.growl.notice({ message: 'Switching to your new account ...' });\n         /* login with the new account */\n         return liveapi.switch_account(info.client_id)\n            .then(() => {\n               liveapi.send({set_account_currency: curr}).then(() => {\n                  local_storage.set(\"currency\", curr);\n                  // To show create account button.\n                  window.location.reload();\n                  real_win && real_win.dialog('close');\n                  real_win_li.hide();\n               });\n            });\n      }).catch((err) => {\n         error_handler(err);\n         real_win && real_win.dialog('close');\n         real_win_li.hide();\n      })\n   };\n\n   real_win_view = rv.bind(root[0], state);\n\n   /* get the residence field and its states */\n   const residence_promise = liveapi.send({ get_settings: 1 })\n      .then((data) => {\n         data = data.get_settings;\n         state.user.salutation = data.salutation || state.user.salutation;\n         state.user.first_name = data.first_name || '';\n         state.user.last_name = data.last_name || '';\n         state.user.account_opening_reason = data.account_opening_reason || '';\n         state.user.date_of_birth = data.date_of_birth ? moment.unix(data.date_of_birth).format(\"YYYY-MM-DD\") : moment().subtract(18, \"years\").format(\"YYYY-MM-DD\");\n         state.user.address_line_1 = data.address_line_1 || '';\n         state.user.address_line_2 = data.address_line_2 || '';\n         state.user.city_address = data.address_city || '';\n         state.user.state_address = data.address_state || '';\n         state.user.address_postcode = data.address_postcode || '';\n         state.user.phone = data.phone || '';\n         state.user.residence = data.country_code || '';\n         state.user.residence_name = data.country || '';\n         state.user.show_account_opening_reason = state.user.account_opening_reason === '';\n      })\n      .catch(error_handler);\n\n   residence_promise\n      .then(\n      () => liveapi.cached.send({ residence_list: 1 })\n      )\n      .then((data) => {\n         state.user.country_array = data.residence_list;\n         state.user.place_of_birth = data.residence_list[0].value;\n         const residence = _.find(data.residence_list, { value: state.user.residence });\n         state.user.phone = state.user.phone ? state.user.phone : residence.phone_idd ? '+' + residence.phone_idd : '';\n      })\n      .catch(error_handler);\n\n   residence_promise\n      .then(\n      () => liveapi.cached.send({ states_list: state.user.residence })\n      )\n      .then((data) => {\n         state.user.state_address_array = [{ text: 'Please select', value: '' }, ...data.states_list];\n         state.user.state_address = state.user.state_address_array[0].value;\n      })\n      .catch(error_handler);\n\n   // Gets available currency for the current user.\n   const update_currencies = () => {\n      const authorize = local_storage.get(\"authorize\");\n      liveapi.cached.send({ landing_company_details: authorize.landing_company_name })\n         .then((data) => {\n            if (!data.landing_company_details || !data.landing_company_details.legal_allowed_currencies)\n               return;\n            const currencies = data.landing_company_details.legal_allowed_currencies;\n            const currencies_config = local_storage.get(\"currencies_config\") || {};\n            const cr_accts = _.filter(loginids(), { is_cr: true });\n            const has_fiat = _.some(cr_accts, { type: 'fiat' });\n            if (!has_fiat)\n               state.user.available_currencies = currencies.filter((c) => {\n                  return currencies_config[c] && currencies_config[c].type === 'fiat';\n               });\n               \n            state.user.available_currencies =[ ...state.user.available_currencies, ..._.difference(\n              currencies.filter((c) => {\n                    return currencies_config[c] && currencies_config[c].type === 'crypto';\n              }),\n              _.filter(cr_accts, { type: 'crypto' }).map((acc) => acc.currency || '')\n            )];\n         });\n   };\n   what_todo === 'new-account' && update_currencies();\n}\n\nexport default { init }\n"]}