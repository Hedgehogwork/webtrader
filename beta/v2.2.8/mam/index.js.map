{"version":3,"sources":["../../../../src/mam/index.es6"],"names":["TRADE_TYPES","code","name","COPY_TRADE_LOCAL_STORE_NAME","DEFAULT_TRADE_TYPES","slice","map","m","defaultCopySettings","copy_start","traderApiToken","min_trade_stake","max_trade_stake","assets","cloneDeep","DEFAULT_ASSETS","trade_types","defaultTraderDetails","open","started","disableRemove","disableStart","yourCopySettings","validateYourCopySettingsData","valid","errorMessage","yourCopySettingsData","length","growl","error","message","updateLocalStorage","clonedScope","scope","searchToken","disable","traderTokens","forEach","f","local_storage","set","GROUPED_INTRUMENTS","then","flatten","instruments","displayName","display_name","submarkets","mm","eGrp","eSubGrp","symbol","push","state","masterAssetList","groupedAssets","win","win_view","masterTradeTypeList","allowCopy","allow_copiers","onAllowCopyChange","debounce","event","send","set_settings","catch","e","onOpenChange","index","onStartedChange","newStarted","fromLocalStorage","get","currentTraderTokenDetails_localSto","newObj","merge","splice","defer","copy_stop","onRemove","toBeRemovedItem","onMinTradeChange","target","data","value","onMaxTradeChange","onUpdateYourSettings","notice","token","onTokenChange","onKeyDown","keyCode","addToken","match","copytrading_statistics","trader_id","copyStatData","traderTokenDetails","find","traderStatistics","focus","initConfigWindow","root","i18n","bind","createBlankWindow","title","resizable","collapsable","minimizable","maximizable","modal","width","copyTrade","get_settings","_refreshTraderStat","traderToken","close","unbind","dialog","remove","track","module_id","is_unique","init","$menuLink","click","moveToTop"],"mappings":"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","file":"index.js","sourcesContent":["/**\n * Created by Arnab Karmakar on 10/1/17.\n */\nimport $ from 'jquery';\nimport windows from '../windows/windows';\nimport rv from '../common/rivetsExtra';\nimport _ from 'lodash';\nimport html from 'text!./index.html';\nimport 'css!./index.css';\nimport '../common/util';\nimport liveapi from 'websockets/binary_websockets';\nimport { init as instrumentPromise } from '../instruments/instruments';\n\nconst TRADE_TYPES = [{\n    code: 'CALL',\n    name: 'Rise/Higher',\n  },\n  {\n    code: 'PUT',\n    name: 'Fall/Lower',\n  },\n  {\n    code: 'ONETOUCH',\n    name: 'Touch',\n  },\n  {\n    code: 'NOTOUCH',\n    name: 'NoTouch',\n  },\n  {\n    code: 'EXPIRYMISS',\n    name: 'Ends Out',\n  },\n  {\n    code: 'EXPIRYRANGE',\n    name: 'Ends In',\n  },\n  {\n    code: 'DIGITDIFF',\n    name: 'Digits Differ',\n  },\n  {\n    code: 'DIGITMATCH',\n    name: 'Digits Match',\n  },\n  {\n    code: 'DIGITOVER',\n    name: 'Digits Over',\n  },\n  {\n    code: 'DIGITUNDER',\n    name: 'Digits Under',\n  },\n  {\n    code: 'DIGITODD',\n    name: 'Digits Odd',\n  },\n  {\n    code: 'DIGITEVEN',\n    name: 'Digits Even',\n  },\n  {\n    code: 'ASIANU',\n    name: 'Asians Up',\n  },\n  {\n    code: 'ASIAND',\n    name: 'Asians Down',\n}];\nconst COPY_TRADE_LOCAL_STORE_NAME = \"copyTrade\";\nconst DEFAULT_TRADE_TYPES = TRADE_TYPES.slice(0, 2).map(m => m.code);\nconst defaultCopySettings = traderApiToken => ({\n  copy_start: traderApiToken,\n  min_trade_stake: 10,\n  max_trade_stake: 100,\n  assets: _.cloneDeep(DEFAULT_ASSETS),\n  trade_types: _.cloneDeep(DEFAULT_TRADE_TYPES),\n});\nconst defaultTraderDetails = traderApiToken => ({\n  open: false,\n  started: false,\n  disableRemove: false,\n  disableStart: false,\n  yourCopySettings: defaultCopySettings(traderApiToken),\n});\nconst validateYourCopySettingsData = yourCopySettingsData => {\n  let valid = false;\n  let errorMessage = '';\n  if (yourCopySettingsData) {\n    if (yourCopySettingsData.assets && yourCopySettingsData.assets.length > 0) {\n      if (yourCopySettingsData.trade_types && yourCopySettingsData.trade_types.length > 0) {\n        if (yourCopySettingsData.min_trade_stake >= 1 && yourCopySettingsData.min_trade_stake <= 50000) {\n          if (yourCopySettingsData.max_trade_stake >= 1 && yourCopySettingsData.max_trade_stake <= 50000) {\n            if (yourCopySettingsData.min_trade_stake < yourCopySettingsData.max_trade_stake) {\n              valid = true;\n            } else {\n              errorMessage = 'Min Trade Stake cannot be more than or equal to Max Trader stake';\n            }\n          } else {\n            errorMessage = 'Max Trade Stake should between 1 and 50000';\n          }\n        } else {\n          errorMessage = 'Min Trade Stake should between 1 and 50000';\n        }\n      } else {\n        errorMessage = 'Trade types required';\n      }\n    } else {\n      errorMessage = 'Assets required';\n    }\n  } else {\n    errorMessage = 'Enter valid values for copy settings';\n  }\n  if (errorMessage) {\n    $.growl.error({ message: errorMessage });\n  }\n  return valid;\n};\nconst updateLocalStorage = scope => {\n  const clonedScope = _.cloneDeep(scope);\n  delete clonedScope.searchToken.disable;\n  clonedScope.traderTokens.forEach(f => {\n    delete f.open;\n    delete f.started; //TODO - if server continues to copy trade when Webtrader is closed, we might not have to delete this\n    delete f.disableRemove;\n    delete f.disableStart;\n  });\n  local_storage.set(COPY_TRADE_LOCAL_STORE_NAME, clonedScope);\n};\n\nlet GROUPED_INTRUMENTS = null; // For nice display purpose only\nlet DEFAULT_ASSETS = null;\n//Get instrument list\ninstrumentPromise().then(instruments => {\n  GROUPED_INTRUMENTS = _.flatten(instruments.map(m => {\n    const displayName = m.display_name;\n    return m.submarkets.map(mm => ({\n      displayName: `${displayName} - ${mm.display_name}`,\n      instruments: mm.instruments,\n    }));\n  }));\n  let assets = [];\n  instruments.forEach(eGrp => {\n    eGrp.submarkets.forEach(eSubGrp => {\n      eSubGrp.instruments.forEach(({ symbol, display_name }) => {\n        assets.push({\n          code: symbol,\n          name: display_name,\n        });\n      });\n    });\n  });\n  state.masterAssetList = assets;\n  state.groupedAssets = GROUPED_INTRUMENTS;\n  // Randomly add top 2 assets in default list\n  DEFAULT_ASSETS = assets.slice(0, 2).map(m => m.code);\n});\n\nlet win = null, win_view = null;\n\nconst state = {\n  //[{ code: , name: }]\n  masterAssetList: [],\n  //[{ code: , name: }]\n  masterTradeTypeList: _.cloneDeep(TRADE_TYPES),\n  groupedAssets: [],\n  allowCopy: {\n    allow_copiers: false,\n    onAllowCopyChange: _.debounce((event, scope) => {\n      liveapi\n        .send({\n          set_settings: 1,\n          allow_copiers: +scope.allowCopy.allow_copiers,\n        })\n        .catch(e => {\n          $.growl.error({ message: e.message });\n          //revert\n          scope.allowCopy.allow_copiers = !scope.allowCopy.allow_copiers;\n        });\n    }, 250),\n  },\n  onOpenChange: (index) => {\n    state.traderTokens[index].open = !state.traderTokens[index].open;\n  },\n  onStartedChange: (index) => {\n    state.traderTokens[index].disableStart = true;\n    const newStarted = !state.traderTokens[index].started;\n    if (newStarted) {\n      //Start copying\n      //if started, revert back to last saved changes(in case user changed anything)\n      const fromLocalStorage = local_storage.get(COPY_TRADE_LOCAL_STORE_NAME);\n      if (fromLocalStorage) {\n        const currentTraderTokenDetails_localSto = fromLocalStorage.traderTokens[index];\n        if (currentTraderTokenDetails_localSto) {\n          const newObj = {};\n          _.merge(newObj, state.traderTokens[index], currentTraderTokenDetails_localSto);\n          state.traderTokens.splice(index, 1);\n          //Have to apply this trick in order to trigger update of UI using rivetsjs.\n          _.defer(() => {\n            state.traderTokens.splice(index, 0, newObj);\n            liveapi\n              .send(newObj.yourCopySettings)\n              .then(() => {\n                newObj.disableStart = false;\n                newObj.started = true;\n              })\n              .catch(e => {\n                $.growl.error({ message: e.message });\n                newObj.disableStart = false;\n              });\n          });\n        }\n      }\n    } else {\n      //Stop copying\n      liveapi.send({\n          copy_stop: state.traderTokens[index].yourCopySettings.copy_start\n        })\n        .then(() => {\n          state.traderTokens[index].disableStart = false;\n          state.traderTokens[index].started = false;\n        })\n        .catch(e => {\n          $.growl.error({ message: e.message });\n          state.traderTokens[index].disableStart = false;\n        });\n    }\n  },\n  onRemove: (index) => {\n    const toBeRemovedItem = state.traderTokens[index];\n    toBeRemovedItem.disableRemove = true;\n    liveapi.send({\n      copy_stop: toBeRemovedItem.yourCopySettings.copy_start\n    })\n    .then(() => {\n      state.traderTokens.splice(index, 1);\n      updateLocalStorage(state);\n    })\n    .catch(e => {\n      $.growl.error({ message: e.message });\n      toBeRemovedItem.disableRemove = false;\n    });\n  },\n  onMinTradeChange: (event, scope) => {\n    const index = $(event.target).data('index');\n    const value = event.target.value;\n    scope.traderTokens[index].yourCopySettings.min_trade_stake = value;\n  },\n  onMaxTradeChange: (event, scope) => {\n    const index = $(event.target).data('index');\n    const value = event.target.value;\n    scope.traderTokens[index].yourCopySettings.max_trade_stake = value;\n  },\n  onUpdateYourSettings: (index) => {\n    if (validateYourCopySettingsData(state.traderTokens[index].yourCopySettings)) {\n      updateLocalStorage(state);\n      $.growl.notice({\n        message: 'Updated successfully',\n      });\n    }\n  },\n  searchToken: {\n    token: '',\n    onTokenChange: (event, scope) => scope.searchToken.token = event.target.value,\n    disable: false,\n    onKeyDown: (event, scope) => {\n      if (event.keyCode === 13) {\n        scope.searchToken.addToken(event, scope);\n      }\n    },\n    addToken: (event, scope) => {\n      //If searchToken.token is empty, do nothing\n      if (!scope.searchToken.token.match(/^[A-Za-z]+\\d+$/)) {\n        //TODO\n        //$.growl.error({\n        //  message: 'Enter a valid trader token',\n        //});\n        //return;\n      }\n\n      scope.searchToken.disable = true;\n\n      liveapi\n        .send({\n          copytrading_statistics: 1,\n          trader_id: scope.searchToken.token,\n        })\n        .then(copyStatData => {\n          if (copyStatData.copytrading_statistics) {\n            const traderTokenDetails = _.find(scope.traderTokens, f => f.yourCopySettings && f.yourCopySettings.copy_start === scope.searchToken.token);\n            //Check if we already added this trader. If yes, then merge the changes\n            if (traderTokenDetails) {\n              _.merge(traderTokenDetails.traderStatistics, copyStatData.copytrading_statistics);\n            }\n            //If not added, then add this along with default yourCopySettings object\n            else {\n              scope.traderTokens.push(_.merge({\n                traderStatistics: copyStatData.copytrading_statistics,\n              }, defaultTraderDetails(scope.searchToken.token)));\n            }\n          }\n          scope.searchToken.token = '';\n          scope.searchToken.disable = false;\n          updateLocalStorage(scope);\n          _.defer(() => $(event.target).focus());\n        })\n        .catch(e => {\n          $.growl.error({ message: e.message });\n          scope.searchToken.disable = false;\n        });\n    },\n  },\n  /*\n   {\n     //We get this object from server - that's why the variables are named as per what server sends\n     traderStatistics: {\n       active_since:,\n       monthly_profitable_trades:,\n       yearly_profitable_trades:,\n       last_12months_profitable_trades:,\n       total_trades:,\n       trades_profitable:,\n       avg_duration:,\n       avg_profit:,\n       avg_loss:,\n       trades_breakdown:,\n       performance_probability:,\n       copiers:,\n     },\n     yourCopySettings: {\n       copy_start: <trader's API token>,\n       min_trade_stake:,\n       max_trade_stake:,\n       assets: [], // <- This should be list of instrument code(s) e.g, frxEURUSD, R_100, etc\n       trade_types: [],\n     },\n     open: false, // if this section is open\n     started: false, // If this is currently being used for copying\n     disableRemove: false,\n   }\n   */\n  traderTokens: [],\n};\n\nconst initConfigWindow = () => {\n  const root = $(html).i18n();\n  win_view = rv.bind(root[0], state);\n\n  win = windows.createBlankWindow(root, {\n    title: 'Copy Trade'.i18n(),\n    resizable: true,\n    collapsable: true,\n    minimizable: true,\n    maximizable: true,\n    modal: false,\n    width: 600,\n    open: () => {\n      //Refresh all token details\n      const copyTrade = local_storage.get(COPY_TRADE_LOCAL_STORE_NAME);\n      if (copyTrade) {\n        _.merge(state, copyTrade);\n        state.traderTokens = _.cloneDeep(state.traderTokens); // This is needed to trigger rivetsjs render\n      }\n      //Get the copy settings\n      liveapi.send({ get_settings: 1 }).then(({get_settings = {}}) =>\n        state.allowCopy.allow_copiers = get_settings.allow_copiers === 1);\n      //Refresh locally stored trader statistics\n      const _refreshTraderStat = async function () {\n        for (let traderToken of copyTrade.traderTokens) {\n          try {\n            const copyStatData = await liveapi.send({\n              copytrading_statistics: 1,\n              trader_id: traderToken,\n            });\n            if (copyStatData.copytrading_statistics) {\n              const traderTokenDetails = _.find(state.traderTokens, f => f.yourCopySettings && f.yourCopySettings.copy_start === traderToken);\n              //Check if we already added this trader. If yes, then merge the changes\n              if (traderTokenDetails) {\n                _.merge(traderTokenDetails.traderStatistics, copyStatData.copytrading_statistics);\n              }\n            }\n          } catch (e) {\n          }\n        }\n      }\n      if (copyTrade) {\n        _refreshTraderStat();\n      }\n    },\n    close: () => {\n      win_view && win_view.unbind();\n      win && win.dialog('destroy').remove();\n      win_view = win = null;\n    },\n    'data-authorized' :'true',\n  });\n  win.track({\n    module_id: 'copyTrade',\n    is_unique: true,\n    data: null,\n  });\n\n  win.dialog( 'open' );\n};\n\nexport const init = ($menuLink) => {\n  $menuLink.click(() => {\n    if (!win) initConfigWindow();\n    else win.moveToTop();\n  });\n};\n\nexport default { init }"]}