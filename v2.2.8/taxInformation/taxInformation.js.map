{"version":3,"sources":["../../../../src/taxInformation/taxInformation.es6"],"names":["win","init","Promise","all","liveapi","cached","send","residence_list","then","data","windows","createBlankWindow","$html","i18n","title","width","height","resizable","collapsable","minimizable","maximizable","closable","closeOnEscape","modal","ignoreTileAction","close","dialog","state","empty_fields","show","validate","clear","_","debounce","place_of_birth","value","tax_residence","tax_identification_number","country_array","submit_disabled","cancel","invalidate","submit","isValid","request","get_settings","address_line_1","address_city","phone","set_settings","join","$","growl","notice","message","catch","err","console","log","error","msg","test","rv","bind"],"mappings":"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","file":"taxInformation.js","sourcesContent":["import 'css!taxInformation/taxInformation.css';\nimport rv from 'common/rivetsExtra';\nimport $ from 'jquery';\nimport windows from 'windows/windows';\nimport $html from 'text!./taxInformation.html';\nimport liveapi from 'websockets/binary_websockets';\nimport _ from \"lodash\";\nimport 'common/util';\nimport 'jquery-growl'\nlet win = null;\n\nexport const init = () => {\n    Promise.all([liveapi.cached.send({ \"get_settings\": 1 }), liveapi.send({ residence_list: 1 })]).then((data) => {\n        win = windows.createBlankWindow($($html).i18n(), {\n            title: \"Tax Information\".i18n(),\n            width: 700,\n            height: 'auto',\n            resizable: false,\n            collapsable: false,\n            minimizable: false,\n            maximizable: false,\n            closable: true,\n            closeOnEscape: false,\n            modal: true,\n            ignoreTileAction: true,\n            'data-authorized': 'true',\n            close: () => {\n                win.dialog('destroy');\n                win = null\n            }\n        });\n        const state = {\n            empty_fields: {\n                show: () => {\n                    state.empty_fields.validate = true;\n                    state.empty_fields.clear();\n                },\n                clear: _.debounce(function () {\n                    state.empty_fields.validate = false;\n                }, 4000),\n                validate: false\n            },\n            place_of_birth: data[1].residence_list[0].value,\n            tax_residence: '',\n            tax_identification_number: null,\n            country_array: data[1].residence_list,\n            submit_disabled: false,\n            cancel: () => {\n                liveapi.invalidate();\n                win.dialog('close');\n            },\n            submit: () => {\n                if (!state.isValid()) {\n                    state.empty_fields.show();\n                    return;\n                }\n                state.submit_disabled = true;\n                const request = data[0].get_settings;\n\n                liveapi.send({\n                    address_line_1: request.address_line_1,\n                    address_city: request.address_city,\n                    phone: request.phone,\n                    place_of_birth: state.place_of_birth,\n                    set_settings: 1,\n                    tax_identification_number: state.tax_identification_number,\n                    tax_residence: state.tax_residence.join(\",\")\n                }).then(() => {\n                    $.growl.notice({ message: \"Tax Information successfully updated\".i18n() });\n                    win.dialog(\"close\");\n                }).catch((err) => {\n                    console.log(err);\n                    $.growl.error({ message: err.msg })\n                })\n            },\n            isValid: () => {\n                return state.place_of_birth && state.tax_residence && state.tax_identification_number &&\n                    /^[\\w-]{0,20}$/.test(state.tax_identification_number)\n            }\n        }\n        rv.bind(win, state);\n        win.dialog(\"open\");\n    }).catch((err) => {\n        console.log(err);\n        $.growl.error({ message: err.msg })\n    });\n}\n\nexport default {\n    init\n}"]}