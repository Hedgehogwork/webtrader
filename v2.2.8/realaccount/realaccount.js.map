{"version":3,"sources":["../../../../src/realaccount/realaccount.es6"],"names":["real_win","real_win_view","real_win_li","error_handler","err","console","error","$","growl","message","object_has_empty_string_value","obj","Object","values","some","value","init","li","click","then","what_todo","init_real_win","html","catch","moveToTop","root","i18n","_title","windows","createBlankWindow","title","resizable","collapsable","minimizable","maximizable","width","height","close","dialog","trigger","remove","open","destroy","unbind","init_state","offset","top","my","left","at","css","app_id","liveapi","state","route","empty_fields","validate","clear","_","debounce","show","input_disabled","risk","visible","user","disabled","accepted","pep","salutation","salutation_array","account_opening_reason_array","account_opening_reason","first_name","last_name","date_of_birth","yearRange","showButtonPanel","residence","residence_name","address_line_1","address_line_2","city_address","state_address","state_address_array","text","address_postcode","phone","secret_question_inx","secret_question_array","secret_answer","place_of_birth","citizen","country_array","tax_residence","tax_identification_number","available_currencies","financial","professional_client","chk_professional","trading_experience","forex_trading_experience","forex_trading_frequency","binary_options_trading_experience","binary_options_trading_frequency","cfd_trading_experience","cfd_trading_frequency","other_instruments_trading_experience","other_instruments_trading_frequency","financial_information","income_source","employment_status","employment_industry","occupation","source_of_wealth","education_level","net_income","estimated_worth","account_turnover","trading_experience_select_data","financial_account_opening","financial_information_select_data","local_storage","get","reduce","a","b","test","id","is_valid","isValid","trim","new_account_real","update","request","undefined","address_city","address_state","secret_question","replace","send","data","info","oauth","push","client_id","token","oauth_token","is_virtual","set","notice","switch_account","hide","pep_window","e","preventDefault","modal","closeOnEscape","professional_window","first_paragraph","first_ul","second_paragraph","second_ul","create_request","new_account_maltainvest","join","affiliate_token","client_type","accept_risk","warn","accept","decline","document","getElementById","scrollIntoView","set_account_opening_reason","req","set_settings","show_account_opening_reason","create_new_account","curr","currency","set_account_currency","window","location","reload","rv","bind","residence_promise","get_settings","moment","unix","format","subtract","country_code","country","cached","residence_list","residence_country_idx","findIndex","find","phone_idd","states_list","update_currencies","authorize","landing_company_details","landing_company_name","legal_allowed_currencies","currencies","currencies_config","cr_accts","filter","loginids","is_cr","has_fiat","type","c","difference","map","acc"],"mappings":"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","file":"realaccount.js","sourcesContent":["/*\n * Created by amin on June 14, 2016.\n */\n\nimport $ from 'jquery';\nimport liveapi from 'websockets/binary_websockets';\nimport windows from 'windows/windows';\nimport rv from 'common/rivetsExtra';\nimport _ from 'lodash';\nimport moment from 'moment';\nimport { getLandingCompany } from 'navigation/navigation';\nimport html from 'text!realaccount/realaccount.html';\nimport 'css!realaccount/realaccount.css';\nimport { financial_account_opening } from '../common/common';\n\nlet real_win = null;\nlet real_win_view = null; // rivets view\nlet real_win_li = null;\n\nconst error_handler = (err) => {\n   console.error(err);\n   $.growl.error({ message: err.message });\n};\n\nconst object_has_empty_string_value = (obj) => {\n      return Object.values(obj).some((value) => value === '');\n};\n\nexport const init = (li) => {\n   real_win_li = li;\n   li.click(() => {\n      if (!real_win) {\n         getLandingCompany()\n            .then(\n            (what_todo) => init_real_win(html, what_todo)\n            )\n            .catch(error_handler);\n      } else {\n         real_win.moveToTop();\n      }\n   });\n}\n\nconst init_real_win = (root, what_todo) => {\n   root = $(root).i18n();\n   const _title = {\n      'upgrade-mlt': 'Real Money Account Opening'.i18n(),\n      'upgrade-mf': 'Financial Account Opening form'.i18n(),\n      'new-account': 'New Account'.i18n(),\n   }[what_todo];\n\n   real_win = windows.createBlankWindow(root, {\n      title: _title,\n      resizable: false,\n      collapsable: false,\n      minimizable: true,\n      maximizable: false,\n      width: 380,\n      height: 400,\n      close: () => {\n         real_win.dialog('destroy');\n         real_win.trigger('dialogclose'); // TODO: figure out why event is not fired.\n         real_win.remove();\n         real_win = null;\n      },\n      open: () => { },\n      destroy: () => {\n         real_win_view && real_win_view.unbind();\n         real_win_view = null;\n      },\n      'data-authorized' :'true'\n   });\n\n   init_state(root, what_todo);\n   real_win.dialog('open');\n\n   /* update dialog position, this way when dialog is resized it will not move*/\n   const offset = real_win.dialog('widget').offset();\n   offset.top = 110;\n   real_win.dialog(\"option\", \"position\", { my: offset.left, at: offset.top });\n   real_win.dialog('widget').css({\n      left: offset.left + 'px',\n      top: offset.top + 'px'\n   });\n}\n\nconst init_state = (root, what_todo) => {\n   const app_id = liveapi.app_id;\n   const state = {\n      route: { value: 'user' }, // routes: ['user', 'financial']\n      empty_fields: {\n         validate: false,\n         clear: _.debounce(() => {\n            state.empty_fields.validate = false;\n         }, 4000),\n         show: () => {\n            state.empty_fields.validate = true;\n            state.empty_fields.clear();\n         }\n      },\n      what_todo: what_todo,\n      input_disabled: false,\n      risk: {\n         visible: false,\n      },\n      user: {\n         disabled: false,\n         accepted: what_todo === 'upgrade-mf',\n         pep: false,\n         salutation: 'Mr',\n         salutation_array: ['Mr', 'Mrs', 'Ms', 'Miss'],\n         account_opening_reason_array: ['Speculative', 'Income Earning', 'Hedging'],\n         account_opening_reason: '',\n         first_name: '',\n         last_name: '',\n         date_of_birth: '',\n         yearRange: \"-100:+0\",\n         showButtonPanel: false, // for jquery ui datepicker\n         residence: '-',\n         residence_name: '-',\n         address_line_1: '',\n         address_line_2: '',\n         city_address: '',\n         state_address: '-',\n         state_address_array: [{ text: '-', value: '-' }],\n         address_postcode: '',\n         phone: '',\n         secret_question_inx: 5,\n         secret_question_array: [\n            'Mother\\'s maiden name', 'Name of your pet', 'Name of first love',\n            'Memorable town/city', 'Memorable date', 'Favourite dish',\n            'Brand of first car', 'Favourite artist'\n         ],\n         secret_answer: '',\n         place_of_birth: '',\n         citizen: '',\n         country_array: [{ text: '-', value: '-' }],\n         tax_residence: '',\n         tax_identification_number: '',\n         available_currencies: []\n      },\n      financial: {\n         accepted: false,\n         disabled: false,\n         professional_client: {\n            chk_professional: false,\n         },\n         trading_experience: {\n            forex_trading_experience: '',\n            forex_trading_frequency: '',\n            binary_options_trading_experience: '',\n            binary_options_trading_frequency: '',\n            cfd_trading_experience: '',\n            cfd_trading_frequency: '',\n            other_instruments_trading_experience: '',\n            other_instruments_trading_frequency: '',\n         },\n         financial_information: {\n            income_source: '',\n            employment_status: '',\n            employment_industry: '',\n            occupation: '',\n            source_of_wealth: '',\n            education_level: '',\n            net_income: '',\n            estimated_worth: '',\n            account_turnover: '',\n         },\n         trading_experience_select_data: {\n            ...financial_account_opening.trading_experience_select_data\n         },\n         financial_information_select_data: {\n            ...financial_account_opening.financial_information_select_data,\n         },\n      }\n   };\n\n   state.input_disabled = local_storage.get(\"oauth\").reduce((a, b) => {\n      return a || /MLT/.test(b.id)\n   }, false) && what_todo === \"upgrade-mf\";\n\n   state.user.is_valid = () => {\n      const user = state.user;\n      return state.user.account_opening_reason !== '' && user.first_name !== '' &&\n         !/[~`!@#\\$%\\^\\&\\*\\(\\)\\+=\\{\\}\\[\\]\\\\|:;\\\",<>?/\\d]/.test(user.first_name) &&\n         user.last_name !== '' &&\n         !/[~`!@#\\$%\\^\\&\\*\\(\\)\\+=\\{\\}\\[\\]\\\\|:;\\\",<>?/\\d]/.test(user.last_name) &&\n         moment(user.date_of_birth, 'YYYY-MM-DD', true).isValid() &&\n         $.trim(state.user.place_of_birth) !== '' &&\n         $.trim(state.user.citizen) !== '' &&\n         user.residence !== '-' &&\n         user.address_line_1 !== '' &&\n         !/[~`!#\\$%\\^\\&\\*\\(\\)\\+=\\{\\}\\[\\]\\\\|:;\\\"<>?]/.test(user.address_line_1) &&\n         !/[~`!#\\$%\\^\\&\\*\\(\\)\\+=\\{\\}\\[\\]\\\\|:;\\\"<>?]/.test(user.address_line_2) &&\n         user.city_address !== '' &&\n         !/[~`!@#\\$%\\^\\&\\*\\(\\)\\+=\\{\\}\\[\\]\\\\|:;\\\",<>?/\\d]/.test(user.city_address) &&\n         /^[^+]{0,20}$/.test(user.address_postcode) &&\n         user.phone !== '' && /^\\+?[0-9\\s]{6,35}$/.test(user.phone) &&\n         (state.input_disabled || /.{4,8}$/.test(user.secret_answer)) && // Check secret answer if mlt account\n         (state.what_todo != \"upgrade-mf\" || (\n            state.user.tax_residence && state.user.tax_identification_number && /^[\\w-]{0,20}$/.test(state.user.tax_identification_number)));\n   };\n\n   state.user.click = () => {\n      if (!state.user.is_valid()) {\n         state.empty_fields.show();\n         return;\n      }\n\n      if (state.what_todo === 'upgrade-mlt') {\n         state.user.new_account_real();\n         return;\n      }\n\n      state.route.update('financial');\n   }\n   state.user.new_account_real = () => {\n\n      const user = state.user;\n      const request = {\n         new_account_real: 1,\n         salutation: user.salutation,\n         first_name: user.first_name,\n         last_name: user.last_name,\n         account_opening_reason: user.account_opening_reason,\n         date_of_birth: user.date_of_birth,\n         place_of_birth: user.place_of_birth,\n         citizen: user.citizen,\n         residence: user.residence,\n         address_line_1: user.address_line_1,\n         address_line_2: user.address_line_2 || undefined, // optional field\n         address_city: user.city_address,\n         address_state: user.state_address || undefined,\n         address_postcode: user.address_postcode || undefined,\n         phone: user.phone,\n         secret_question: user.secret_question_array[user.secret_question_inx],\n         secret_answer: user.secret_answer.replace('\"\"', \"'\")\n      };\n\n      state.user.disabled = true;\n      liveapi.send(request)\n         .then((data) => {\n            state.user.disabled = false;\n            const info = data.new_account_real;\n            const oauth = local_storage.get('oauth');\n            oauth.push({ id: info.client_id, token: info.oauth_token, is_virtual: 0 });\n            local_storage.set('oauth', oauth);\n            $.growl.notice({ message: 'Account successfully created' });\n            $.growl.notice({ message: 'Switching to your new account ...' });\n            /* login with the new account */\n            return liveapi.switch_account(info.client_id)\n               .then(() => {\n                  real_win && real_win.dialog('close');\n                  real_win_li.hide();\n               });\n         })\n         .catch((err) => {\n            state.user.disabled = false;\n            error_handler(err);\n         });\n   };\n\n   state.user.pep_window = (e) => {\n      e.preventDefault();\n      const text = `A Politically Exposed Person (PEP) is an individual who is or has been entrusted with a prominent public function including his/her immediate family members or persons known to be close associates of such persons, but does not include middle ranking or more junior officials.<br><br>\n         Such individuals include Heads of State, Ministers, Parliamentary Secretaries, Members of Parliament, Judges, Ambassadors, Senior Government Officials, High Ranking Officers in the Armed Forces, Audit Committees of the boards of central banks, and Directors of state-owned corporations.<br><br>\n         The “immediate family members” of the above examples will also be considered as PEP, and these include their spouses/partners, parents, and children. Additionally, “persons known to be close associates” of PEPs include their business partners, will also be considered as such.<br><br>\n         As a general rule, a person considered to be a PEP and who has ceased to be entrusted with a prominent public function for a period of at least twelve months no longer qualifies as a PEP.`;\n      windows.createBlankWindow(`<div style=\"padding:15px;\">${text}</div>`, {\n         title: \"PEP\",\n         modal: true,\n         resizable: false,\n         collapsable: false,\n         minimizable: false,\n         maximizable: false,\n         closeOnEscape: true,\n         width: 500,\n         height: 'auto'\n      }).dialog(\"open\");\n   }\n\n   state.user.professional_window = (e) => {\n      e.preventDefault();\n      const first_paragraph = `Clients need to satisfy at least two of the following criteria in order to receive Professional Client status:`;\n      const first_ul = [`You’ve carried out significant transactions on markets similar to the ones we offer, averaging 10 transactions per quarter for the previous four quarters`,\n      `The size of your instrument portfolio exceeds EUR 500,000 or its equivalent`, `You’ve worked in the financial sector for at least one year in a role that requires knowledge of your intended transactions on our platform`];\n      const second_paragraph = `If you choose to be treated as a Professional Client, we’ll regard you as having the required market knowledge and experience. As such, we’ll take steps to ensure that your request for Professional Client status meets the above criteria, including a request for the following:`;\n      const second_ul = [`Statements that reflect your transactions from the previous four quarters`, `Proof of your portfolio held elsewhere`, `Proof of your employment`];\n      windows.createBlankWindow(`<div style=\"padding:15px;\">\n      <div>${first_paragraph}</div>\n      <ul class=\"checked\">\n            <li>${first_ul[0]}</li>\n            <li>${first_ul[1]}</li>\n            <li>${first_ul[2]}</li>\n      </ul>\n      <div>${second_paragraph}</div>\n      <ul class=\"bullet\">\n            <li>${second_ul[0]}</li>\n            <li>${second_ul[1]}</li>\n            <li>${second_ul[2]}</li>\n      </ul>\n      </div>`, {\n         title: \"Professional Client\",\n         modal: true,\n         resizable: false,\n         collapsable: false,\n         minimizable: false,\n         maximizable: false,\n         closeOnEscape: true,\n         width: 600,\n         height: 'auto'\n      }).dialog(\"open\");\n   }\n\n   state.financial.click = () => {\n      if (object_has_empty_string_value(state.financial.trading_experience)) {\n            state.empty_fields.show();\n            $.growl.error({ message: 'Not all trading experiences are completed' });\n            return;\n      }\n\n      if (object_has_empty_string_value(state.financial.financial_information)) {\n         state.empty_fields.show();\n         $.growl.error({ message: 'Not all financial information are completed' });\n         return;\n      }\n\n      if (!state.financial.accepted) {\n         $.growl.error({ message: 'Binary.com terms and conditions unchecked.' });\n         return;\n      }\n\n      state.risk.visible = true;\n   };\n\n   state.financial.create_request = () => {\n      const user = state.user;\n      const request = {\n         new_account_maltainvest: 1,\n         salutation: user.salutation,\n         first_name: user.first_name,\n         account_opening_reason: user.account_opening_reason,\n         last_name: user.last_name,\n         date_of_birth: user.date_of_birth,\n         residence: user.residence,\n         address_line_1: user.address_line_1,\n         address_line_2: user.address_line_2 || undefined, // optional field\n         address_city: user.city_address,\n         address_state: user.state_address || undefined,\n         address_postcode: user.address_postcode || undefined,\n         phone: user.phone,\n         place_of_birth: state.user.place_of_birth,\n         citizen: state.user.citizen,\n         tax_residence: state.user.tax_residence.join(\",\"),\n         tax_identification_number: state.user.tax_identification_number,\n\n         affiliate_token: '',\n         client_type: state.financial.professional_client.chk_professional ? 'professional' : 'retail',\n         ...state.financial.financial_information,\n         ...state.financial.trading_experience,\n         accept_risk: 1,\n      };\n      return request;\n   };\n\n   state.financial.new_account_maltainvest = () => {\n      const request = state.financial.create_request();\n      console.warn(request);\n   }\n\n   state.risk.accept = () => {\n      const request = state.financial.create_request();\n      if (!state.input_disabled) {\n         request.secret_question = state.user.secret_question_array[state.user.secret_question_inx];\n         request.secret_answer = state.user.secret_answer;\n      }\n      state.risk.visible = false;\n      state.financial.disabled = true;\n      liveapi.send(request)\n         .then((data) => {\n            const info = data.new_account_maltainvest;\n            const oauth = local_storage.get('oauth');\n            oauth.push({ id: info.client_id, token: info.oauth_token, is_virtual: 0 });\n            local_storage.set('oauth', oauth);\n            $.growl.notice({ message: 'Account successfully created' });\n            $.growl.notice({ message: 'Switching to your new account ...' });\n            /* login with the new account */\n            return liveapi.switch_account(info.client_id)\n               .then(() => {\n                  real_win && real_win.dialog('close');\n                  real_win_li.hide();\n               });\n         })\n         .catch((err) => {\n            state.financial.disabled = false;\n            error_handler(err);\n         });\n   }\n   state.risk.decline = () => {\n      state.risk.visible = false;\n   }\n\n   state.route.update = (route) => {\n      state.route.value = route;\n      // scroll to top for second page of form\n      if (route === 'financial') { document.getElementById('financial_second_page').scrollIntoView() }\n      real_win.dialog('widget').trigger('dialogresizestop');\n   };\n\n   state.set_account_opening_reason = () => {\n      var req = { set_settings: 1 };\n      req.account_opening_reason = state.user.account_opening_reason;\n      state.user.disabled = true;\n      liveapi.send(req).then((data) => {\n         state.user.show_account_opening_reason = false;\n      }).catch((err) => {\n         error_handler(err);\n         state.user.disabled = false;\n      });\n   };\n\n   state.create_new_account = (curr) => {\n      const req = {\n         new_account_real: 1,\n         salutation: state.user.salutation || '',\n         first_name: state.user.first_name || '',\n         last_name: state.user.last_name || '',\n         date_of_birth: state.user.date_of_birth || '',\n         address_line_1: state.user.address_line_1 || '',\n         address_line_2: state.user.address_line_2 || '',\n         address_city: state.user.city_address || '',\n         address_state: state.user.state_address || '',\n         address_postcode: state.user.address_postcode || '',\n         phone: state.user.phone || '',\n         account_opening_reason: state.user.account_opening_reason,\n         residence: state.user.residence,\n      };\n      liveapi.send(req).then((data) => {\n         const info = data.new_account_real;\n         const oauth = local_storage.get('oauth');\n         oauth.push({ id: info.client_id, token: info.oauth_token, currency: curr, is_virtual: 0 });\n         local_storage.set('oauth', oauth);\n         $.growl.notice({ message: 'Account successfully created' });\n         $.growl.notice({ message: 'Switching to your new account ...' });\n         /* login with the new account */\n         return liveapi.switch_account(info.client_id)\n            .then(() => {\n               liveapi.send({set_account_currency: curr}).then(() => {\n                  local_storage.set(\"currency\", curr);\n                  // To show create account button.\n                  window.location.reload();\n                  real_win && real_win.dialog('close');\n                  real_win_li.hide();\n               });\n            });\n      }).catch((err) => {\n         error_handler(err);\n         real_win && real_win.dialog('close');\n         real_win_li.hide();\n      })\n   };\n\n   real_win_view = rv.bind(root[0], state);\n\n   /* get the residence field and its states */\n   const residence_promise = liveapi.send({ get_settings: 1 })\n      .then((data) => {\n         data = data.get_settings;\n         state.user.salutation = data.salutation || state.user.salutation;\n         state.user.first_name = data.first_name || '';\n         state.user.last_name = data.last_name || '';\n         state.user.account_opening_reason = data.account_opening_reason || '';\n         state.user.date_of_birth = data.date_of_birth ? moment.unix(data.date_of_birth).format(\"YYYY-MM-DD\") : moment().subtract(18, \"years\").format(\"YYYY-MM-DD\");\n         state.user.address_line_1 = data.address_line_1 || '';\n         state.user.address_line_2 = data.address_line_2 || '';\n         state.user.city_address = data.address_city || '';\n         state.user.state_address = data.address_state || '';\n         state.user.address_postcode = data.address_postcode || '';\n         state.user.phone = data.phone || '';\n         state.user.residence = data.country_code || '';\n         state.user.residence_name = data.country || '';\n         state.user.show_account_opening_reason = state.user.account_opening_reason === '';\n      })\n      .catch(error_handler);\n\n   residence_promise\n      .then(\n      () => liveapi.cached.send({ residence_list: 1 })\n      )\n      .then((data) => {\n         const residence_country_idx = data.residence_list.findIndex((country) => country.text === state.user.residence_name);\n         state.user.country_array = data.residence_list;\n         state.user.place_of_birth = data.residence_list[residence_country_idx].value;\n         state.user.citizen = data.residence_list[residence_country_idx].value;\n         const residence = _.find(data.residence_list, { value: state.user.residence });\n         state.user.phone = state.user.phone ? state.user.phone : residence.phone_idd ? '+' + residence.phone_idd : '';\n      })\n      .catch(error_handler);\n\n   residence_promise\n      .then(\n      () => liveapi.cached.send({ states_list: state.user.residence })\n      )\n      .then((data) => {\n         state.user.state_address_array = [{ text: 'Please select', value: '' }, ...data.states_list];\n         state.user.state_address = state.user.state_address_array[0].value;\n      })\n      .catch(error_handler);\n\n   // Gets available currency for the current user.\n   const update_currencies = () => {\n      const authorize = local_storage.get(\"authorize\");\n      liveapi.cached.send({ landing_company_details: authorize.landing_company_name })\n         .then((data) => {\n            if (!data.landing_company_details || !data.landing_company_details.legal_allowed_currencies)\n               return;\n            const currencies = data.landing_company_details.legal_allowed_currencies;\n            const currencies_config = local_storage.get(\"currencies_config\") || {};\n            const cr_accts = _.filter(loginids(), { is_cr: true });\n            const has_fiat = _.some(cr_accts, { type: 'fiat' });\n            if (!has_fiat)\n               state.user.available_currencies = currencies.filter((c) => {\n                  return currencies_config[c] && currencies_config[c].type === 'fiat';\n               });\n               \n            state.user.available_currencies =[ ...state.user.available_currencies, ..._.difference(\n              currencies.filter((c) => {\n                    return currencies_config[c] && currencies_config[c].type === 'crypto';\n              }),\n              _.filter(cr_accts, { type: 'crypto' }).map((acc) => acc.currency || '')\n            )];\n         });\n   };\n   what_todo === 'new-account' && update_currencies();\n}\n\nexport default { init }\n"]}